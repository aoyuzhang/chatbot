{"version":3,"sources":["components/chatbot/Post.js","components/chatbot/SimpleForm.js","App.js","index.js"],"names":["Post","props","steps","console","log","submit","name","email","phone","zip","state","userObject","this","value","axios","post","then","res","status","catch","error","Component","config","width","height","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","SimpleForm","id","message","trigger","options","label","end","user","validator","test","component","asMessage","App","className","ReactDOM","render","document","getElementById"],"mappings":"0NAiCeA,E,kDA7Bb,WAAYC,GAAO,IAAD,sBAEhB,IAAOC,GADP,cAAMD,IACgBA,MAAfC,MACPC,QAAQC,IAAIF,GACZ,IAAOG,EAAkCH,EAAlCG,OAAQC,EAA0BJ,EAA1BI,KAAMC,EAAoBL,EAApBK,MAAMC,EAAcN,EAAdM,MAAMC,EAAQP,EAARO,IAJjB,OAMhB,EAAKC,MAAQ,CAAEL,SAAQC,OAAMC,QAAOC,QAAOC,OAN3B,E,qDAQlB,WACE,IAAME,EAAa,CACjBN,OAAQO,KAAKF,MAAML,OAAOQ,MAC1BP,KAAMM,KAAKF,MAAMJ,KAAKO,MACtBL,MAAOI,KAAKF,MAAMF,MAAMK,MACxBN,MAAOK,KAAKF,MAAMH,MAAMM,MACxBJ,IAAKG,KAAKF,MAAMD,IAAII,OAEtBC,IAAMC,KAAK,OAAQJ,GAClBK,MAAK,SAAAC,GACJd,QAAQC,IAAIa,EAAIC,WACfC,OAAM,SAASC,GAChBjB,QAAQC,IAAIgB,Q,oBAGhB,WACE,OACE,wF,GA1BaC,aCEbC,EAAQ,CACZC,MAAO,QACPC,OAAQ,SAIJC,EAAQ,CACZC,WAAY,UACZC,WAAY,iBACZC,cAAe,UACfC,gBAAiB,OACjBC,eAAgB,OAChBC,eAAgB,UAChBC,aAAe,OACfC,gBAAiB,OACjBC,cAAe,WA8IFC,E,4JAzIb,WACE,OACE,cAAC,gBAAD,CAAeV,MAAOA,EAAtB,SACE,cAAC,IAAD,aACEvB,MAAS,CACP,CACEkC,GAAI,QACJC,QAAS,uCACTC,QAAS,cAEX,CACEF,GAAI,aACJG,QAAQ,CACN,CAAC1B,MAAM,KAAM2B,MAAM,MAAOF,QAAQ,gBAClC,CAACzB,MAAO,KAAM2B,MAAM,KAAMF,QAAQ,iBAGtC,CACEF,GAAI,eACJC,QAAQ,SACRC,QAAS,UAEX,CACEF,GAAI,cACJC,QAAS,sBACTI,KAAK,GAEP,CACEL,GAAG,SACHC,QAAQ,qBACRC,QAAQ,QAEV,CACEF,GAAG,OACHM,MAAK,EACLC,UAAU,SAAC9B,GACT,QAAG,mDAAmD+B,KAAK/B,IAMlD,0CAGXyB,QAAS,WAEX,CACEF,GAAI,UACJC,QAAS,sBACTC,QAAQ,SAEV,CACEF,GAAI,QACJM,MAAM,EACNC,UAAU,SAAC9B,GACT,QAAI,gDAAgD+B,KAAK/B,IAKhD,+BAGXyB,QAAQ,SAEV,CACEF,GAAI,QACJC,QAAS,8CACTC,QAAS,OAGX,CACEF,GAAI,MACJM,MAAM,EACNC,UAAW,SAAC9B,GACV,QAAI,2BAA2B+B,KAAK/B,IAM3B,kCAGXyB,QAAS,WAEX,CACEF,GAAI,UACJC,QAAS,6BACTC,QAAS,SAEX,CACEF,GAAI,QACJM,MAAK,EACLC,UAAW,SAAC9B,GACV,QAAG,qDAAqD+B,KAAK/B,IAKpD,sCAGXyB,QAAS,YAEX,CACEF,GAAI,WACJC,QAAS,yBACTC,QAAS,UAEX,CACEF,GAAI,SACJG,QAAQ,CACN,CAAC1B,MAAO,IAAK2B,MAAM,MAAOF,QAAQ,eAClC,CAACzB,MAAO,IAAK2B,MAAO,KAAMF,QAAS,eAGvC,CACEF,GAAI,YACJC,QAAS,sCACTI,KAAK,GAEP,CACEL,GAAI,cACJS,UAAW,cAAC,EAAD,IACXC,WAAW,EACXL,KAAK,KAGLnB,U,GAnIWD,aCZV0B,E,4JARb,WACE,OACE,qBAAKC,UAAY,MAAjB,SACE,cAAC,EAAD,U,GAJU3B,aCClB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ce67e546.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Post extends Component{\n  constructor(props){\n    super(props);\n    const{ steps } = this.props;\n    console.log(steps);\n    const{ submit, name, email,phone,zip } = steps;\n\n    this.state = { submit, name, email, phone, zip};\n  }\n  componentDidMount(){\n    const userObject = {\n      submit: this.state.submit.value,\n      name: this.state.name.value,\n      phone: this.state.phone.value,\n      email: this.state.email.value,\n      zip: this.state.zip.value,\n    };\n    axios.post('/api', userObject)\n    .then(res =>{\n      console.log(res.status)\n    }).catch(function(error){\n      console.log(error);\n    });\n  }\n  render(){\n    return(\n      <div> Thank you! Your data was submitted successfully!</div>\n    );\n  }\n};\nexport default Post;\n","import React, {Component} from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport Post from './Post';\n\nconst config ={\n  width: \"400px\",\n  height: \"500px\",\n}\n\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#EF6C00',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor:  '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\n\nclass SimpleForm extends Component{\n  render(){\n    return(\n      <ThemeProvider theme={theme}>\n        <ChatBot\n          steps = {[\n            {\n              id: 'intro',\n              message: 'Do you agree to Terms and Condition?',\n              trigger: 'intro-user',\n            },\n            {\n              id: 'intro-user',\n              options:[\n                {value:'y0', label:'yes', trigger:'yes-response'},\n                {value: 'n0', label:'No', trigger:'no-response'},\n              ]\n            },\n            {\n              id: 'yes-response',\n              message:'Great!',\n              trigger: 'q-name',\n            },\n            {\n              id: 'no-response',\n              message: 'Sorry to hear that.',\n              end: true,\n            },\n            {\n              id:'q-name',\n              message:'What is your name?',\n              trigger:'name',\n            },\n            {\n              id:'name',\n              user:true,\n              validator:(value) =>{\n                if(/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value))\n                {\n                  return true;\n                }\n                else\n                {\n                  return \"Please input alphabet characters only.\";\n                }\n              },\n              trigger: 'q-email',\n            },\n            {\n              id: \"q-email\",\n              message: 'What is your email?',\n              trigger:\"email\",\n            },\n            {\n              id: 'email',\n              user: true,\n              validator:(value) =>{\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value))\n                {\n                  return true;\n                }\n                else {\n                  return 'Please enter a valid email.';\n                }\n              },\n              trigger:'q-zip',\n            },\n            {\n              id: 'q-zip',\n              message: 'What is your 5 digits or 9 digits zip code?',\n              trigger: 'zip',\n\n            },\n            {\n              id: 'zip',\n              user: true,\n              validator: (value) => {\n                if (/^[0-9]{5}(?:-[0-9]{4})?$/.test(value))\n                {\n                  return true;\n                }\n                else\n                {\n                  return \"Please enter a valid zip code.\"\n                }\n              },\n              trigger: 'q-phone'\n            },\n            {\n              id: 'q-phone',\n              message: \"What is your phone number?\",\n              trigger: 'phone',\n            },\n            {\n              id: 'phone',\n              user:true,\n              validator: (value) =>{\n                if(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(value))\n                {\n                  return true;\n                }\n                else {\n                  return \"Please enter a valid phone number.\";\n                }\n              },\n              trigger: 'q-submit',\n            },\n            {\n              id: 'q-submit',\n              message: 'Do you wish to submit?',\n              trigger: 'submit'\n            },\n            {\n              id: 'submit',\n              options:[\n                {value: 'y', label:'Yes', trigger:'end-message'},\n                {value: 'n', label: 'no', trigger: 'no-submit'},\n              ]\n            },\n            {\n              id: 'no-submit',\n              message: 'Your information was not submitted.',\n              end: true,\n            },\n            {\n              id: 'end-message',\n              component: <Post />,\n              asMessage: true,\n              end: true\n            }\n          ]}\n          {...config}\n        />\n      </ThemeProvider>\n    );\n  }\n\n}\nexport default SimpleForm;\n","import React, {Component} from 'react';\nimport SimpleForm from \"./components/chatbot/SimpleForm\";\n\nclass App extends Component{\n  render(){\n    return(\n      <div className = \"App\">\n        <SimpleForm />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
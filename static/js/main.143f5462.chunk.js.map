{"version":3,"sources":["components/chatbot/SimpleForm.js","App.js","index.js"],"names":["theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","SimpleForm","steps","id","message","trigger","options","value","label","end","user","validator","test","Component","App","className","ReactDOM","render","document","getElementById"],"mappings":"iMAIMA,EAAQ,CACZC,WAAY,UACZC,WAAY,iBACZC,cAAe,UACfC,gBAAiB,OACjBC,eAAgB,OAChBC,eAAgB,UAChBC,aAAe,OACfC,gBAAiB,OACjBC,cAAe,WAsHFC,E,4JAjHb,WACE,OACE,cAAC,gBAAD,CAAeV,MAAOA,EAAtB,SACE,cAAC,IAAD,CACEW,MAAS,CACP,CACEC,GAAI,QACJC,QAAS,uCACTC,QAAS,cAEX,CACEF,GAAI,aACJG,QAAQ,CACN,CAACC,MAAM,IAAKC,MAAM,MAAOH,QAAQ,gBACjC,CAACE,MAAO,IAAKC,MAAM,KAAMH,QAAQ,iBAGrC,CACEF,GAAI,eACJC,QAAQ,SACRC,QAAS,UAEX,CACEF,GAAI,cACJC,QAAS,sBACTK,KAAK,GAEP,CACEN,GAAG,SACHC,QAAQ,qBACRC,QAAQ,QAEV,CACEF,GAAG,OACHO,MAAK,EACLC,UAAU,SAACJ,GACT,QAAG,mDAAmDK,KAAKL,IAMlD,0CAGXF,QAAS,WAEX,CACEF,GAAI,UACJC,QAAS,sBACTC,QAAQ,SAEV,CACEF,GAAI,QACJO,MAAM,EACNC,UAAU,SAACJ,GACT,QAAI,gDAAgDK,KAAKL,IAKhD,+BAGXF,QAAQ,SAEV,CACEF,GAAI,QACJC,QAAS,yBACTC,QAAS,OAGX,CACEF,GAAI,MACJO,MAAM,EACNC,UAAW,SAACJ,GACV,QAAI,2BAA2BK,KAAKL,IAM3B,kCAGXF,QAAS,WAEX,CACEF,GAAI,UACJC,QAAS,6BACTC,QAAS,SAEX,CACEF,GAAI,QACJO,MAAK,EACLC,UAAW,SAACJ,GACV,QAAG,qDAAqDK,KAAKL,IAKpD,sCAGXE,KAAI,Y,GAzGOI,aCLVC,E,4JARb,WACE,OACE,qBAAKC,UAAY,MAAjB,SACE,cAAC,EAAD,U,GAJUF,aCClBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.143f5462.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#EF6C00',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor:  '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n}\n\n\nclass SimpleForm extends Component{\n  render(){\n    return(\n      <ThemeProvider theme={theme}>\n        <ChatBot\n          steps = {[\n            {\n              id: 'intro',\n              message: 'Do you agree to Terms and Condition?',\n              trigger: 'intro-user',\n            },\n            {\n              id: 'intro-user',\n              options:[\n                {value:'y', label:'yes', trigger:'yes-response'},\n                {value: 'n', label:'No', trigger:'no-response'},\n              ]\n            },\n            {\n              id: 'yes-response',\n              message:'Great!',\n              trigger: 'q-name',\n            },\n            {\n              id: 'no-response',\n              message: 'Sorry to hear that.',\n              end: true,\n            },\n            {\n              id:'q-name',\n              message:'What is your name?',\n              trigger:'name',\n            },\n            {\n              id:'name',\n              user:true,\n              validator:(value) =>{\n                if(/^[A-Za-z][A-Za-z\\'\\-]+([\\ A-Za-z][A-Za-z\\'\\-]+)*/.test(value))\n                {\n                  return true;\n                }\n                else\n                {\n                  return \"Please input alphabet characters only.\";\n                }\n              },\n              trigger: 'q-email',\n            },\n            {\n              id: \"q-email\",\n              message: 'What is your email?',\n              trigger:\"email\",\n            },\n            {\n              id: 'email',\n              user: true,\n              validator:(value) =>{\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value))\n                {\n                  return true;\n                }\n                else {\n                  return 'Please enter a valid email.';\n                }\n              },\n              trigger:'q-zip',\n            },\n            {\n              id: 'q-zip',\n              message: 'What is your zip code?',\n              trigger: 'zip',\n\n            },\n            {\n              id: 'zip',\n              user: true,\n              validator: (value) => {\n                if (/^[0-9]{5}(?:-[0-9]{4})?$/.test(value))\n                {\n                  return true;\n                }\n                else\n                {\n                  return \"Please enter a valid zip code.\"\n                }\n              },\n              trigger: 'q-phone'\n            },\n            {\n              id: 'q-phone',\n              message: \"What is your phone number?\",\n              trigger: 'phone',\n            },\n            {\n              id: 'phone',\n              user:true,\n              validator: (value) =>{\n                if(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(value))\n                {\n                  return true;\n                }\n                else {\n                  return \"Please enter a valid phone number.\";\n                }\n              },\n              end:true,\n            },\n          ]}\n        />\n      </ThemeProvider>\n    );\n  }\n\n}\nexport default SimpleForm;\n","import React, {Component} from 'react';\nimport SimpleForm from \"./components/chatbot/SimpleForm\";\n\nclass App extends Component{\n  render(){\n    return(\n      <div className = \"App\">\n        <SimpleForm />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}